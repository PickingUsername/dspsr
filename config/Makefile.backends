#-*-Makefile-*- helps emacs recognize that this file is a Makefile

##############################################################################
#
# This Makefile contains specializations for each location
#
##############################################################################

# add backend-specific libraries to LMBFLAGS
LBACKENDS := 

# add backend macros to backends.h
BACKENDS := 

##############################################################################
#
# PMDAQ specific code
#
ifeq ($(PMDAQ),yes)

CPPFLAGS += -DDSP_PMDAQ=1
CLASSES += PMDAQFile PMDAQ_Observation OneBitCorrection PMDAQ_Extension
BACKENDS += PMDAQ

endif

##############################################################################
#
# CPSR2 specific code
#
ifeq ($(CPSR2),yes)

CPPFLAGS += -DDSP_CPSR2=1
CLASSES += CPSR2File CPSR2TwoBitCorrection CPSR2_Observation DumbCPSR2Unpacker
BACKENDS += CPSR2

endif

##############################################################################
#
# CPSR2_8bit specific code (currently in baseband/CPSR2_8bit)
#
ifeq ($(CPSR2_8bit),yes)

CPPFLAGS += -DDSP_CPSR2_8bit=1
BACKENDS += CPSR2_8bit
LBACKENDS += -ldsp_CPSR2_8bit
endif

##############################################################################
#
# CPSR2 4-bit specific code
#
ifeq ($(CPSR2_4bit),yes)

CPPFLAGS += -DDSP_CPSR2_4bit=1
CLASSES += CPSR2FourBitUnpacker
BACKENDS += CPSR2_4bit

endif

##############################################################################
#
# CPSR specific code
#
ifeq ($(CPSR),yes)

CPPFLAGS += -DDSP_CPSR=1
CLASSES += CPSRFile CPSRTwoBitCorrection DumbCPSRUnpacker
BACKENDS += CPSR
LBACKENDS += -lcpsr_obs

endif

##############################################################################
#
# S2 specific code
#
ifeq ($(S2),yes)

CPPFLAGS += -DDSP_S2=1
CLASSES += S2File S2TwoBitCorrection S2TwoBitTable
BACKENDS += S2
LBACKENDS += -ls2_obs

endif

##############################################################################
#
# PuMa specific code
#
ifeq ($(PuMa),yes)

CPPFLAGS += -DDSP_PuMa=1
BACKENDS += PuMa
INCFLAGS += -I${DEVEL_INSTALL}/include
LBACKENDS += -ldsp_PuMa -ldsp -L${DEVEL_INSTALL}/lib -lpuma -lputils

endif

##############################################################################
#
# PuMa2 specific code
#
ifeq ($(PuMa2),yes)

CPPFLAGS += -DDSP_PuMa2=1
BACKENDS += PuMa2
LBACKENDS += -ldsp_PuMa2

endif

##############################################################################
#
# Mark4 specific code
# 
# Don't be misled by the name, it is really the Mark4 encoders that are giving
# the file this name. This is because the Mark5 recorders - currently - use
# Mark4 formatters and record the data like a tape drive would (without parity)
#
ifeq ($(MARK4),yes)

CPPFLAGS += -DDSP_MARK4=1
BACKENDS += MARK4
LBACKENDS += -ldsp_Mark4

endif

##############################################################################
#
# Mark5 specific code sent to HSK by JP
# 
ifeq ($(MARK5),yes)

CPPFLAGS += -DDSP_MARK5=1
BACKENDS += MARK5
LBACKENDS += -ldsp_Mark5

endif

##############################################################################
#
# Arecibo-loader specific code sent to HSK by JP
# 
ifeq ($(ARECIBO),yes)

CPPFLAGS += -DDSP_ARECIBO=1
BACKENDS += ARECIBO
LBACKENDS += -ldsp_Arecibo

endif

##############################################################################
#
# Maxim specific code, for use
# with the Vela glitch monitoring system on the 14m dish in Hobart.
#
# WARNING: Don't use SMRO and Maxim at the same time. Their file type
#          tests are identical.
#
ifeq ($(Maxim),yes)

CPPFLAGS += -DDSP_Maxim=1
BACKENDS += Maxim
LBACKENDS += -ldsp_Maxim

endif

##############################################################################
#
# SMRO specific code
# 
# WARNING: Don't use SMRO and VSIB at the same time, VSIB is being phased out
#
ifeq ($(SMRO),yes)

CPPFLAGS += -DDSP_SMRO=1
BACKENDS += SMRO
LBACKENDS += -ldsp_SMRO

endif

##############################################################################
#
# Dumb loader for LBA data (SMRO) specific code
# 
ifeq ($(DUMBLBA),yes)

CPPFLAGS += -DDSP_DUMBLBA=1
BACKENDS += DUMBLBA
LBACKENDS += -ldsp_DUMBLBA

endif

##############################################################################
#
# Japanese K5 support
# 
ifeq ($(K5),yes)

CPPFLAGS += -DDSP_K5=1
BACKENDS += K5
LBACKENDS += -ldsp_K5

endif


##############################################################################
#
# VSIB specific code
#
# This should not be considered anymore as the better version of smro will be 
# its replacement.
#
ifeq ($(VSIB),yes)

CPPFLAGS += -DDSP_VSIB=1
BACKENDS += VSIB
LBACKENDS += -ldsp_VSIB

endif

##############################################################################
#
# Spigot specific code
#
ifeq ($(SPIGOT),yes)

CPPFLAGS += -DDSP_SPIGOT=1
BACKENDS += Spigot
LBACKENDS += -ldsp_Spigot $(LCFITSIO)

endif

##############################################################################
#
# BCPM specific code
#
ifeq ($(BCPM),yes)

CPPFLAGS += -DDSP_BCPM=1
BACKENDS += BCPM
LBACKENDS += -ldsp_BCPM

endif

##############################################################################
#
# MINI specific code
#
ifeq ($(MINI),yes)

CPPFLAGS += -DDSP_MINI=1
BACKENDS += MINI
LBACKENDS += -ldsp_MINI

endif

