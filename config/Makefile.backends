#-*-Makefile-*- helps emacs recognize that this file is a Makefile

##############################################################################
#
# This Makefile contains specializations for each backend
#
##############################################################################

# add backend-specific libraries to LDFLAGS
LBACKENDS := 

# add backend macros to backends.h
BACKENDS := 

# add sub-directories to be compiled
MODULES :=

-include $(LOCAL_ROOT)/backends.list

##############################################################################
#
# ASP specific code by Willem van Straten
#
ifeq ($(ASP),yes)

MODULES += asp
BACKENDS += ASP
LBACKENDS += -ldsp_ASP

endif

##############################################################################
#
# BCPM specific code
#
ifeq ($(BCPM),yes)

MODULES += bcpm
BACKENDS += BCPM
LBACKENDS += -ldsp_BCPM

endif

##############################################################################
#
# CPSR specific code
#
ifeq ($(CPSR),yes)

MODULES += cpsr
BACKENDS += CPSR
LBACKENDS += -ldsp_cpsr

endif

##############################################################################
#
# CPSR2 specific code
#
ifeq ($(CPSR2),yes)

MODULES += cpsr2
BACKENDS += CPSR2
LBACKENDS += -ldsp_cpsr2

endif

# fadc mark4 mark5 maxim mini mwa puma puma2 s2 smro spigot vsib

##############################################################################
#
# PMDAQ specific code
#
ifeq ($(PMDAQ),yes)

MODULES += pmdaq
BACKENDS += PMDAQ
LBACKENDS += -ldsp_pmdaq

endif


##############################################################################
#
# CPSR2_8bit specific code (currently in baseband/CPSR2_8bit)
#
ifeq ($(CPSR2_8bit),yes)

BACKENDS += CPSR2_8bit
LBACKENDS += -ldsp_CPSR2_8bit
endif

##############################################################################
#
# CPSR2 4-bit specific code
#
ifeq ($(CPSR2_4bit),yes)

CLASSES += CPSR2FourBitUnpacker
BACKENDS += CPSR2_4bit

endif

##############################################################################
#
# CPSR specific code
#
ifeq ($(CPSR),yes)

CLASSES += CPSRFile CPSRTwoBitCorrection DumbCPSRUnpacker
BACKENDS += CPSR
LBACKENDS += -lcpsr_obs

endif

##############################################################################
#
# S2 specific code
#
ifeq ($(S2),yes)

CLASSES += S2File S2TwoBitCorrection S2TwoBitTable
BACKENDS += S2
LBACKENDS += -ls2_obs

endif

##############################################################################
#
# PuMa specific code
#
ifeq ($(PuMa),yes)

BACKENDS += PuMa
INCFLAGS += -I${DEVEL_INSTALL}/include
LBACKENDS += -ldsp_PuMa -ldsp -L${DEVEL_INSTALL}/lib -lpuma -lputils

endif

##############################################################################
#
# PuMa2 specific code
#
ifeq ($(PuMa2),yes)

BACKENDS += PuMa2
LBACKENDS += -ldsp_PuMa2

endif

##############################################################################
#
# Mark4 specific code
# 
# Don't be misled by the name, it is really the Mark4 encoders that are giving
# the file this name. This is because the Mark5 recorders - currently - use
# Mark4 formatters and record the data like a tape drive would (without parity)
#
ifeq ($(MARK4),yes)

BACKENDS += MARK4
LBACKENDS += -ldsp_Mark4

endif

##############################################################################
#
# Mark5 specific code by Willem van Straten
# 
ifeq ($(MARK5),yes)

BACKENDS += MARK5
LBACKENDS += -ldsp_Mark5

endif


##############################################################################
#
# Fadc specific code
#
# This works for FADC continuously sampled data from Fadc only
#
ifeq ($(Fadc),yes)

BACKENDS += Fadc
LBACKENDS += -ldsp_Fadc -ldsp

endif

##############################################################################
#
# Maxim specific code, for use
# with the Vela glitch monitoring system on the 14m dish in Hobart.
#
# WARNING: Don't use SMRO and Maxim at the same time. Their file type
#          tests are identical.
#
ifeq ($(Maxim),yes)

BACKENDS += Maxim
LBACKENDS += -ldsp_Maxim

endif

##############################################################################
#
# SMRO specific code
# 
# WARNING: Don't use SMRO and VSIB at the same time, VSIB is being phased out
#
ifeq ($(SMRO),yes)

BACKENDS += SMRO
LBACKENDS += -ldsp_SMRO

endif

##############################################################################
#
# Dumb loader for LBA data (SMRO) specific code
# 
ifeq ($(DUMBLBA),yes)

BACKENDS += DUMBLBA
LBACKENDS += -ldsp_DUMBLBA

endif

##############################################################################
#
# Loader for MWA (Mileura) specific code
# 
ifeq ($(MWA),yes)

BACKENDS += MWA
LBACKENDS += -ldsp_MWA

endif

##############################################################################
#
# Japanese K5 support
# 
ifeq ($(K5),yes)

BACKENDS += K5
LBACKENDS += -ldsp_K5

endif


##############################################################################
#
# VSIB specific code
#
# This should not be considered anymore as the better version of smro will be 
# its replacement.
#
ifeq ($(VSIB),yes)

BACKENDS += VSIB
LBACKENDS += -ldsp_VSIB

endif

##############################################################################
#
# Spigot specific code
#
ifeq ($(SPIGOT),yes)

BACKENDS += Spigot
LBACKENDS += -ldsp_Spigot $(LCFITSIO)

endif


##############################################################################
#
# MINI specific code
#
ifeq ($(MINI),yes)

BACKENDS += MINI
LBACKENDS += -ldsp_MINI

endif

##############################################################################
#
# Rule to create backends.list
#
$(LOCAL_ROOT)/backends.list:
	@cd $(LOCAL_ROOT) && make backends

